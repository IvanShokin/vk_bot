from random import randint

menu = [('üé∞ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É', 'positive'),
        ('üí∞ –ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É', 'secondary '),
        ('üëõ –ú–æ–π –∫–æ—à–µ–ª–µ–∫', 'primary '),
        ('‚ö† –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É', 'negative '),
        ('üì¶ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫', 'primary')]

regulations = "–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥,–∫–∞–∫ –º—ã –≤–∏–¥–∏–º —Ç—ã –Ω–æ–≤–µ–Ω—å–∫–∏–π, –ø–æ—ç—Ç–æ–º—É –≤–æ—Ç —Ç–µ–±–µ –Ω–∞—à–∏ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n" \
              "1.–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å - —ç—Ç–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –≤ –æ–±—ã—á–Ω–æ–µ –ö–∞–∑–∏–Ω–æ\n" \
              "2.–ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É - —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –≥–¥–µ —Ç—ã –ø—Ä–æ—Å—Ç–æ –º–æ–∂–µ—à—å –∏—Å–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É —à–∞–Ω—Å ,—á—Ç–æ —Ç—ã –≤—ã–≥—Ä–∞–µ—à—å –∏ –ø—Ä–æ–≥—Ä–∞–µ—à—å = 50%\n" \
              "3.–í —Ç–≤–æ–µ–º –∫–æ—à–µ–ª—å–∫–µ –Ω–∞—Ö–æ–¥—è—Ç—å—Å—è —Ç–≤–æ–∏ –º–æ–Ω–µ—Ç—ã ,–∫–æ—Ç–æ—Ä—ã–º–∏ —Ç—ã –º–æ–∂–µ—à—å –∏–≥—Ä–∞—Ç—å\n" \
              "4.–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É - —ç—Ç–æ –º–æ–Ω–µ—Ç—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∏–≥—Ä–∞–µ—à—å\n" \
              "5.–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ - –ø—Ä–æ—Å—Ç–æ –º–æ–∂–µ—à—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ –∫–æ—Ä–æ–±–æ–∫ –∏ –ø–æ–≤—ã—Å–∏—Ç—å —Å–µ–±–µ —à–∞–Ω—Å —É–≥–∞–¥–∞—Ç—å))\n" \
              "–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã —Ç–µ–±–µ!\n"

colors = ['primary', 'secondary', 'negative', 'positive']


class User:
    def __init__(self, id_user, money=100, bet=10, box=4, true_answer=None, condition='menu'):
        self.id_user = id_user
        self.money = money
        self.bet = bet
        self.box = box
        self.true_answer = true_answer
        self.condition = condition

    def menu(self, new_mess):
        command = {
            'üé∞ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É': self.game,
            'üí∞ –ú–æ–π –∫–æ—à–µ–ª–µ–∫': str(self.money),
            'üëõ –ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É': self.luck,
            '‚ö† –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É': self.new_bet,
            'üì¶ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫': self.new_box_quantity
        }
        if isinstance(command.get(new_mess), tuple):
            return command.get(new_mess)
        else:
            return command.get(new_mess)()

    def game(self):
        self.condition = 'game'
        self.true_answer = randint(1, self.box)
        keyboard = []
        for box_i in range(self.box):
            button = f'{box_i+1} Box', 'primary'
            keyboard.append(button)
        return '–í—ã–±–µ—Ä–∏ –±–æ–∫—Å!', keyboard

    def answer(self, user_answer):
        self.condition = 'menu'
        user_answer = int(user_answer.split()[0])

        if user_answer == self.true_answer:
            self.money += self.bet * self.box
            return f'–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {self.bet * self.box} –º–æ–Ω–µ—Ç!', menu
        else:
            self.money -= self.bet
            return f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {self.bet * self.box} –º–æ–Ω–µ—Ç(', menu

    def new_bet(self):
        self.condition = 'new_bet'
        return '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–∞–≤–∫—É!', []

    def new_box_quantity(self):
        self.condition = 'new_box_quantity'
        keyboard = []
        for box_i in range(2, 6):
            button = str(box_i), randint(colors(0, 3))
            keyboard.append(button)
        return '–í—ã–±–µ—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫', keyboard

    def set_new_bet(self, new_bet):
        self.condition = 'menu'
        self.bet = int(new_bet)
        return '–°—Ç–∞–≤–∫–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å ‚úÖ', menu

    def set_new_box_quantity(self, new_box_quantity):
        self.condition = 'menu'
        self.box = int(new_box_quantity)
        return '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã ‚úÖ', menu

    def luck(self):
        if randint(1, 2) == 1:
            self.money += self.bet
            return f'–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ‚úÖ {self.bet}!', menu
        else:
            self.money -= self.bet
            return f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ‚ùå {self.bet}', menu

    def response(self, new_mess):
        all_condition = {
            'menu': self.menu,
            'game': self.answer,
            'new_bet': self.set_new_bet,
            'new_box_quantity': self.set_new_box_quantity,
        }

        return all_condition.get(self.condition)(new_mess)
